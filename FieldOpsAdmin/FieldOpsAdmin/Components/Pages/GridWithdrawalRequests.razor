@page "/GridWithdrawal"
<MudContainer MaxWidth="MaxWidth.Large">
    <MudGrid>
        <MudItem xs="12" Class="mt-5">
            <MudContainer Class="custom-container mb-5 p-5" Style="background-color:#fff; border:0.1px solid #cbcbcb; border-radius:10px;">
                <MudContainer Class="mt-5">
                    <MudGrid AlignItems="Center" Style="justify-content:space-between; width: calc(100% + 24px)!important;">
                        <MudItem lg="5" xs="12" Class="mb-3">
                            <MudText Typo="Typo.h6" Class="pl-2 d-flex align-items-center header-txt">Pending Withdrawal Requests</MudText>
                        </MudItem>
                        <MudItem lg="3"  xs="12" Class="mb-3">
                            <div class="custom-select-wrapper">
                                <select class="custom-select" @onchange="OnRowsPerPageChanged">
                                    <option value="6">View Rows: 6</option>
                                    <option value="100">View Rows:100</option>
                                    <option value="200">View Rows:200</option>
                                    <option value="300">View Rows:300</option>
                                    <option value="400">View Rows:400</option>
                                </select>
                            </div>
                        </MudItem>
                        <MudItem lg="4" xs="12" Class="mb-3">
                            <div class="search-container">
                                <input type="text" placeholder="Search Transaction" class="search-input" />
                                <img src="./Images/Search.svg" alt="Search Icon" class="mud-icon" />
                            </div>
                        </MudItem>
                      
                    </MudGrid>
                </MudContainer>

                <MudContainer Class="custom-container">
                    <MudTable Items="PaginatedTransactions" Striped="false" Bordered="false" Class="custom-table mb-5 mt-5">
                        <HeaderContent>
                            <MudTh Class="text-center t-head" Style="width: 15%;">
                                Trans ID
                            </MudTh>
                            <MudTh Class="text-center t-head" Style="width: 15%;">
                                Amount
                            </MudTh>
                            <MudTh Class="text-center t-head" Style="width: 10%;">
                                Type
                            </MudTh>
                            <MudTh Class="text-center t-head" Style="width: 15%;">
                                Balance
                            </MudTh>
                            <MudTh Class="text-center t-head" Style="width: 15%;">
                                Date
                            </MudTh>
                            <MudTh Class="text-center t-head" Style="width: 13%;">
                                Status
                            </MudTh>
                            <MudTh Class="text-center t-head" Style="width: 17%;">
                                Action
                            </MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd ColSpan="7">
                                <MudPaper Class="row-card" Elevation="0" Style="border: 1px solid #ccc; border-radius: 4px; padding: 10px;">
                                    <MudGrid Class="grid-rows">
                                        <MudItem xs="2" Class="text-center grid-item" Style="width: 12%;">
                                            @context.TransId
                                        </MudItem>
                                        <MudItem xs="2" Class="text-center grid-item" Style="width: 15%;">
                                            @context.Amount
                                        </MudItem>
                                        <MudItem xs="1" Class="text-center grid-item" Style="width: 10%;">
                                            @context.Type
                                        </MudItem>
                                        <MudItem xs="2" Class="text-center grid-item" Style="width: 15%;">
                                            @context.Balance
                                        </MudItem>
                                        <MudItem xs="2" Class="text-center grid-item" Style="width: 17%;">
                                            @context.Date.ToString("MMMM dd, yyyy")
                                        </MudItem>
                                        <MudItem xs="1" Class="text-center grid-item" Style="width: 13%;">
                                            <span class="@GetStatusClass(@context.Status)">
                                                @context.Status
                                            </span>
                                        </MudItem>
                                        <MudItem xs="2" Class="text-center grid-item" Style="width: 17%;">
                                            <MudIconButton>
                                                <img src="./Images/EditAction.svg" alt="Edit Icon" style="width: 41px; height: 30px;" />
                                            </MudIconButton>
                                        </MudItem>
                                    </MudGrid>
                                </MudPaper>
                            </MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudContainer>
                <PagerContent>
                    <MudGrid AlignItems="Center" Justify="Justify.Center">
                        <MudItem>
                            <div class="custom-pagination py-3">
                                <button @onclick="PreviousPage">
                                    <img src="./Images/Chevron_Left_MD.svg" alt="Previous" class="pagination-icon" />
                                </button>
                                @for (int i = 1; i <= TotalPages; i++)
                                {
                                    <button @onclick="() => GoToPage(i)" class="pagination-button @GetActiveClass(i)">
                                        @i
                                    </button>
                                }
                                <button @onclick="NextPage">
                                    <img src="./Images/Chevron_Right_MD.svg" alt="Next" class="pagination-icon" />
                                </button>
                            </div>
                        </MudItem>
                    </MudGrid>
                </PagerContent>
            </MudContainer>
        </MudItem>
    </MudGrid>
</MudContainer>
<style>
    /*head*/
    .search-container {
        display: flex;
        padding: 10px 18px;
        justify-content: center;
        align-items: center;
        border-radius: 8px;
        font-size: 14px;
        border: 0.5px solid #000;
        background: #EFEFEF;
        width: 100%;
    }

    .search-input {
        border: none;
        outline: none;
        flex-grow: 1;
        background: transparent;
        font-size: 14px;
    }

    .search-icon {
        font-size: 20px;
        color: #000;
    }

    .custom-select {
        flex-shrink: 0;
        padding: 12px 18px;
        border-radius: 10px;
        border: 0.5px solid #000;
        background: #EFEFEF;
        font-size: 14px;
        width:100%;
    }

    /*table*/
    .mud-table-root .mud-table-head {
        background-color: #Efefef;
    }

    .t-head {
        text-align: center;
        font-size: 18px;
        font-style: normal;
        font-weight: 800;
        line-height: normal;
        color: #000 !important;

    }

    .text-center {
        text-align: center;
        font-family: Inter;
        font-size: 17px;
        font-style: normal;
        font-weight: 500;
        line-height: normal;
        color: #000;
    }

    .active-page {
        background-color: #0074e3 !important;
        color: #fff !important;
        border: none !important;
    }

    .status-pending {
        border-radius: 16px;
        background: #DCB012;
        color: #FFF;
        font-family: Inter;
        font-size: 12px;
        font-style: normal;
        font-weight: 500;
        line-height: normal;
        display: flex;
        height: 21px;
        padding: 10px;
        justify-content: center;
        align-items: center;
        gap: 10px;
    }

    .status-active {
        color: #FFF;
        font-family: Inter;
        font-size: 12px;
        font-style: normal;
        font-weight: 500;
        line-height: normal;
        display: flex;
        height: 21px;
        padding: 10px;
        justify-content: center;
        align-items: center;
        gap: 10px;
        border-radius: 16px;
        background: #4AD771;
    }

    .row-card {
        border: 0.5px solid #767676;
        border-radius: 10px;
        padding: 15px;
        background-color: white;
    }

    .action-container {
        display: flex;
        justify-content: space-around;
        background: #f1f1f1;
        border-radius: 5px;
        padding: 5px;
    }

    /*Mud Over wright and border */
    .mud-toolbar.mud-toolbar-gutters.mud-table-toolbar {
        height: auto;
        padding: 15px;
    }

    .mud-table-root .mud-table-body .mud-table-cell {
        border-bottom: none;
    }

    .mud-table-root .mud-table-cell {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .mud-grid-spacing-xs-6 > .grid-item {
        padding-left: 24px;
        padding-top: 24px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .grid-rows {
        justify-content: space-between !important;
    }

    .custom-container {
        max-height: 100%;
    }
    /*pagination*/

    .custom-pagination {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
    }

    .pagination-button {
        width: 24px;
        height: 24px;
        border: 2px solid #000;
        background-color: transparent;
        color: #000;
        border-radius: 50%;
        font-weight: bold;
        font-size: 16px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
    }
    /*bank grid */

    .grid-rows > .mud-grid-item {
        flex-basis: auto;
    }
</style>

@code {
    public class Transaction
    {
        public int TransId { get; set; }
        public string Amount { get; set; }
        public string Type { get; set; }
        public string Balance { get; set; }
        public DateTime Date { get; set; }
        public string Status { get; set; }
    }

    private List<Transaction> transactions = new List<Transaction>
    {
        new Transaction { TransId = 1232323, Amount = "$100.00", Type = "Withdraw", Balance = "Debit", Date = DateTime.Now, Status = "Pending" },
        new Transaction { TransId = 1232323, Amount = "$200.00", Type = "Withdraw", Balance = "Debit", Date = DateTime.Now, Status = "Pending" },
        new Transaction { TransId = 1232323, Amount = "$300.00", Type = "Withdraw", Balance = "Debit", Date = DateTime.Now, Status = "Pending" },
        new Transaction { TransId = 1232323, Amount = "$400.00", Type = "Withdraw", Balance = "Debit", Date = DateTime.Now, Status = "Pending" }
    };

    private string GetStatusClass(string status)
    {
        return status switch
        {
            "Completed" => "status-completed",
            "Pending" => "status-pending",
            _ => "status-default"
        };
    }

    // Pagination
    private int _rowsPerPage = 1;
    private int currentPage = 1;
    private int totalItems => transactions.Count;

    public int TotalPages => (int)Math.Ceiling((double)totalItems / _rowsPerPage);

    private IEnumerable<Transaction> PaginatedTransactions =>
        transactions.Skip((currentPage - 1) * _rowsPerPage).Take(_rowsPerPage);

    private string GetActiveClass(int pageNumber) =>
        pageNumber == currentPage ? "active-page" : "";

    private void GoToPage(int pageNumber)
    {
        if (pageNumber > 0 && pageNumber <= TotalPages)
        {
            currentPage = pageNumber;
            StateHasChanged();
        }
    }

    private void PreviousPage()
    {
        if (currentPage > 1)
        {
            currentPage--;
            StateHasChanged();
        }
    }

    private void NextPage()
    {
        if (currentPage < TotalPages)
        {
            currentPage++;
            StateHasChanged();
        }
    }

    // Handle change in rows per page
    private void OnRowsPerPageChanged(ChangeEventArgs e)
    {
        _rowsPerPage = int.Parse(e.Value.ToString());
        currentPage = 1;
        StateHasChanged();
    }
}
