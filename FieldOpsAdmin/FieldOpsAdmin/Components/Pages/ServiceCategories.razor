@page "/ServiceCategories"
@using FieldOpsAdmin.Services
<MudContainer MaxWidth="MaxWidth.Large">
    <MudGrid>
        <MudItem xs="12" Class="mt-5">
            <MudContainer Class="custom-container mb-5 p-5" Style="background-color:#fff; border:0.1px solid #cbcbcb; border-radius:10px;padding-bottom: 20px;">
                <MudContainer Class="mt-5">
                    <MudGrid AlignItems="Center" Style="justify-content:space-between; width: calc(100% + 24px)!important;">
                        <MudItem lg="3" md="12" xs="12" Class="mb-3">
                            <MudText Typo="Typo.h6" Class="pl-2 d-flex align-items-center">Categories</MudText>
                        </MudItem>
                        <MudItem lg="3" md="12" xs="12" Class="mb-3">
                        </MudItem>
                        <MudItem lg="3" md="12" xs="12" Class="mb-3">
                            <div class="search-container">
                                <input type="text" placeholder="Search Category" class="search-input"  @oninput="SearchCategories" />
                                <button><img src="./Images/Search.svg" alt="Search Icon" class="mud-icon" /></button>
                            </div>
                        </MudItem>
                        <MudItem lg="3" xs="12" Class="d-flex justify-end mb-3">
                            <MudButton Variant="Variant.Filled" Class="add-btn" OnClick="OpenCategoryDialog">
                                <img src="./Images/Add-Category-Icon.svg" alt="Add Icon" class="mud-icon" />
                                Add Category
                            </MudButton>
                        </MudItem>
                    </MudGrid>
                </MudContainer>
                <MudContainer Class="mt-5">
                    <MudGrid Class="mt-4" Gutter="GutterSize.None">
                        @foreach (var category in FilteredCategories)
                        {
                            var href = $"/CategoryDetails?id={category.Id}";
                            <MudItem xs="12" sm="6" md="4">
                                <MudCard Class="mud-card">
                                    <MudCardContent Class="mud-card-content">
                                        <div class="img-cont">
                                            <img src="@category.Icon" alt="@category.Name" class="category-icon" />
                                        </div>
                                        <div style="display:flex; align-items: center;">
                                            <MudText Typo="Typo.subtitle1" Class="mud-category-text">@category.Name</MudText>
                                                <MudButton Class="arrow-btn" Href="@href">
                                                    <img src="./Images/Category-Right-Arrow.svg" alt="Arrow Icon" class="arrow-icon" />
                                                </MudButton>
                                            </div>
                                        </MudCardContent>
                                    </MudCard>
                                </MudItem>
                        }
                    </MudGrid>
                </MudContainer>
            </MudContainer>
        </MudItem>
    </MudGrid>
</MudContainer>

<style>
    .img-cont {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 80px;
        height: 80px;
        border-radius: 50%;
        background-color: #FFFFFF;
        margin-bottom: 20px;
    }

    .category-icon {
        width: 80px;
        height: 80px;
        border-radius:50%;
    }

    .add-btn {
        display: flex;
        padding: 10px;
        justify-content: space-evenly;
        align-items: center;
        gap: 8px;
        flex-shrink: 0;
        border-radius: 8px;
        color: #FFF;
        font-family: Inter;
        font-size: 14px;
        line-height: normal;
        background: #0074E3;
        text-transform: capitalize;
        width: 100%;
    }

        .add-btn:hover {
            display: flex;
            padding: 10px;
            justify-content: space-evenly;
            align-items: center;
            gap: 8px;
            flex-shrink: 0;
            border-radius: 8px;
            color: #FFF;
            font-family: Inter;
            font-size: 14px;
            line-height: normal;
            background: #0074E3;
            text-transform: capitalize;
            width: 100%;
        }

    .mud-icon {
        width: 24px;
        height: 24px;
        margin-right: 10px;
    }

    .search-container {
        display: flex;
        padding: 10px 18px;
        justify-content: center;
        align-items: center;
        border-radius: 8px;
        font-size: 14px;
        border: 0.5px solid #000;
        background: #EFEFEF;
    }

    .search-input {
        border: none;
        outline: none;
        flex-grow: 1;
        background: transparent;
        font-size: 14px;
        width: 100%;
    }

    .search-icon {
        font-size: 20px;
        color: #000;
    }

    .mud-card {
        display: flex;
        width: 100%;
        height: 232px;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: 42.006px;
        flex-shrink: 0;
        border-radius: 12.925px;
        background: #DBECFD;
    }

    .mud-card-content {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-around
    }

    .mud-icon-category {
        font-size: 50px;
        color: #0074E3;
    }

    .mud-category-text {
        margin-top: 10px;
        text-align: center;
        font-weight: 600;
        font-size: 18px;
        margin-right: 5px;
    }

    .mud-arrow-icon {
        position: absolute;
        bottom: 15px;
        right: 15px;
        color: #0074E3;
    }

    .img-cont {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 80px;
        height: 80px;
        border-radius: 50%;
        background-color: #FFFFFF;
        margin-bottom: 20px;
    }

</style>


@code {
    private string _searchTerm;
    [Inject] private ApiService _apiService { get; set; }
    [Inject] private IDialogService DialogService { get; set; }
    [Inject] private GlobalServices _globalService { get; set; }
    private bool isLoading = false;
    private List<CategoryDto> categories = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadCategories();
    }

    private async Task LoadCategories()
    {
        isLoading = true;
        StateHasChanged();
        try
        {
            categories = await _apiService.MakeHttpGetRequest<List<CategoryDto>>($"Admin/getallservicecategories?domainId={_globalService.domainId}");
        }
        catch (Exception)
        {

            throw;
        }
        finally
        {
            isLoading = false;
        }


    }

    private async Task OpenCategoryDialog()
    {
        var dialog = DialogService.Show<AddNewCategory>("Add Category");
        var result = await dialog.Result; 

        if (!result.Canceled && result.Data is bool isSuccess && isSuccess)
        {
            await LoadCategories(); 
            StateHasChanged(); 
        }
    }

    private IEnumerable<CategoryDto> FilteredCategories => categories
        .Where(c => string.IsNullOrWhiteSpace(_searchTerm)
                    || c.Name.Contains(_searchTerm, StringComparison.OrdinalIgnoreCase));

    private void SearchCategories(ChangeEventArgs e)
    {
        _searchTerm = e.Value?.ToString();
        StateHasChanged();
    }
}

